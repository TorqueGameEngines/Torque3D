diff --git a/libs/dimcli/cli.cpp b/libs/dimcli/cli.cpp
index 45dac3b..6129884 100644
--- a/libs/dimcli/cli.cpp
+++ b/libs/dimcli/cli.cpp
@@ -392,8 +392,8 @@ GroupConfig const & Cli::Config::findGrpOrDie(Cli const & cli) {
 ***/
 
 //===========================================================================
-Cli::OptBase::OptBase(string const & names, bool boolean)
-    : m_bool{boolean}
+Cli::OptBase::OptBase(string const & names, bool in_boolean)
+    : m_bool{in_boolean}
     , m_names{names}
 {
     // set m_fromName and assert if names is malformed
@@ -526,12 +526,12 @@ static bool includeName(
     OptName const & name,
     NameListType type,
     Cli::OptBase const & opt,
-    bool boolean,
+    bool in_boolean,
     bool inverted
 ) {
     if (name.opt != &opt)
         return false;
-    if (boolean) {
+    if (in_boolean) {
         if (type == kNameEnable)
             return !name.invert;
         if (type == kNameDisable)
diff --git a/libs/dimcli/cli.h b/libs/dimcli/cli.h
index d4941dc..fa8d526 100644
--- a/libs/dimcli/cli.h
+++ b/libs/dimcli/cli.h
@@ -777,7 +777,7 @@ public:
     };
 
 public:
-    OptBase(std::string const & keys, bool boolean);
+    OptBase(std::string const & keys, bool in_boolean);
     virtual ~OptBase() {}
 
     //-----------------------------------------------------------------------
@@ -1062,7 +1062,7 @@ std::string Cli::OptBase::toValueDesc<DIMCLI_LIB_FILESYSTEM_PATH>() const {
 template <typename A, typename T>
 class Cli::OptShim : public OptBase {
 public:
-    OptShim(std::string const & keys, bool boolean);
+    OptShim(std::string const & keys, bool in_boolean);
     OptShim(OptShim const &) = delete;
     OptShim & operator=(OptShim const &) = delete;
 
@@ -1249,8 +1249,8 @@ protected:
 
 //===========================================================================
 template <typename A, typename T>
-Cli::OptShim<A, T>::OptShim(std::string const & keys, bool boolean)
-    : OptBase(keys, boolean)
+Cli::OptShim<A, T>::OptShim(std::string const & keys, bool in_boolean)
+    : OptBase(keys, in_boolean)
 {
     if (std::is_arithmetic<T>::value)
         this->imbue(std::locale(""));
