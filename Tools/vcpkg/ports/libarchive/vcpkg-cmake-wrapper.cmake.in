_find_package(${ARGS})

include(CMakeFindDependencyMacro)

if(@ENABLE_ZLIB@)
    find_dependency(ZLIB)
endif()
if(@ENABLE_BZip2@)
    find_dependency(BZip2)
endif()
if(@ENABLE_LIBXML2@)
    find_dependency(LibXml2)
endif()
if(@ENABLE_LZ4@)
    find_dependency(lz4)
endif()
if(@ENABLE_LZMA@)
    find_dependency(LibLZMA)
endif()
if(@ENABLE_ZSTD@)
    find_dependency(zstd)
endif()
if(@ENABLE_OPENSSL@)
    find_dependency(OpenSSL)
endif()
if(@ENABLE_LZO@)
    find_library(LZO_LIBRARY_DEBUG NAMES lzo2d lzo2 NAMES_PER_DIR PATH_SUFFIXES lib PATHS "${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}/debug" NO_DEFAULT_PATH)
    find_library(LZO_LIBRARY_RELEASE NAMES lzo2 NAMES_PER_DIR PATH_SUFFIXES lib PATHS "${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}" NO_DEFAULT_PATH)
endif()

if("@VCPKG_LIBRARY_LINKAGE@" STREQUAL "static")
    if(@ENABLE_ZLIB@)
        list(APPEND LibArchive_LIBRARIES ZLIB::ZLIB)
    endif()
    if(@ENABLE_BZip2@)
        list(APPEND LibArchive_LIBRARIES BZip2::BZip2)
    endif()
    if(@ENABLE_LIBXML2@)
        list(APPEND LibArchive_LIBRARIES LibXml2::LibXml2)
    endif()
    if(@ENABLE_LZ4@)
        list(APPEND LibArchive_LIBRARIES lz4::lz4)
    endif()
    if(@ENABLE_LZMA@)
        list(APPEND LibArchive_LIBRARIES LibLZMA::LibLZMA)
    endif()
    if(@ENABLE_LZO@)
        if(LZO_LIBRARY_RELEASE)
            list(APPEND LibArchive_LIBRARIES optimized ${LZO_LIBRARY_RELEASE})
        endif()
        if(LZO_LIBRARY_DEBUG)
            list(APPEND LibArchive_LIBRARIES debug ${LZO_LIBRARY_DEBUG})
        endif()
    endif()
    if(@ENABLE_ZSTD@)
        if(TARGET zstd::libzstd_shared)
            list(APPEND LibArchive_LIBRARIES zstd::libzstd_shared)
        else(TARGET zstd::libzstd_shared)
            list(APPEND LibArchive_LIBRARIES zstd::libzstd_static)
        endif(TARGET zstd::libzstd_shared)
    endif()
    if(@ENABLE_OPENSSL@)
        list(APPEND LibArchive_LIBRARIES OpenSSL::Crypto)
    endif()

    if(TARGET LibArchive::LibArchive)
        if(@ENABLE_BZip2@)
            target_link_libraries(LibArchive::LibArchive INTERFACE BZip2::BZip2)
        endif()
        if(@ENABLE_ZLIB@)
            target_link_libraries(LibArchive::LibArchive INTERFACE ZLIB::ZLIB)
        endif()
        if(@ENABLE_LIBXML2@)
            target_link_libraries(LibArchive::LibArchive INTERFACE LibXml2::LibXml2)
        endif()
        if(@ENABLE_LZ4@)
            target_link_libraries(LibArchive::LibArchive INTERFACE lz4::lz4)
        endif()
        if(@ENABLE_LZMA@)
            target_link_libraries(LibArchive::LibArchive INTERFACE LibLZMA::LibLZMA)
        endif()
        if(@ENABLE_LZO@)
            if(LZO_LIBRARY_RELEASE)
                list(APPEND interface_lib \$<\$<NOT:\$<CONFIG:DEBUG>>:${LZO_LIBRARY_RELEASE}>)
            endif()
            if(LZO_LIBRARY_DEBUG)
                list(APPEND interface_lib \$<\$<CONFIG:DEBUG>:${LZO_LIBRARY_DEBUG}>)
            endif()
            set_property(TARGET LibArchive::LibArchive APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${interface_lib})
        endif()
        if(@ENABLE_ZSTD@)
            target_link_libraries(LibArchive::LibArchive INTERFACE zstd::libzstd_static)
        endif()
        if(@ENABLE_OPENSSL@)
            target_link_libraries(LibArchive::LibArchive INTERFACE OpenSSL::Crypto)
        endif()
    endif()
endif()


# TODO in some future
# if(@ENABLE_PCREPOSIX@)
# endif()
# if(@ENABLE_NETTLE@)
# endif()
# if(@ENABLE_EXPAT@)
# endif()
# if(@ENABLE_LibGCC@)
# endif()
# if(@ENABLE_CNG@)
# endif()
# if(@ENABLE_TAR@)
# endif()
# if(@ENABLE_CPIO@)
# endif()
# if(@ENABLE_CAT@)
# endif()
# if(@ENABLE_XATTR@)
# endif()
# if(@ENABLE_ACL@)
# endif()
# if(@ENABLE_ICONV@)
# endif()
