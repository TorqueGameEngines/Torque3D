input {
	float4 vPosition POSITION
	float2 texCoord0 TEXCOORD0
}
connect {
	float4 vPosition SV_Position
	float2 texCoord0 TEXCOORD0
}
vertex {
	uniform {
		float4x4 	modelViewProj
		float2 		texDirection
		float2 		texOffset
		float 		accumTime
		float 		texScale
	}
	main {
		OUT.vPosition = mul(modelViewProj, float4(IN.vPosition.xyz,1.0))
		OUT.vPosition.z = OUT.vPosition.w
		float2 uv = IN.texCoord0
		uv += texOffset
		uv *= texScale
		uv += accumTime * texDirection
		OUT.texCoord0 = uv
	}
}
pixel {
	uniform {
		Texture2D diffuseMap
	}
	output {
		float4 col SV_Target0
	}
	main {
		OUT.col = diffuseMap.Sample(diffuseMap, IN.texCoord0)
	}
}
