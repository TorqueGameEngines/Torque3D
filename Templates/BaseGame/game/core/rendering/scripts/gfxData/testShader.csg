input {
	float3 pos : POSITION;
	float2 uv0 : TEXCOORD0;
}
connect {
	float4 hpos : SV_Position;
	float2 texCoord : TEXCOORD0;
}
vertex {
	uniform {
		float4x4 modelview;
		float2 texDirection;
		float2 texOffset;
		float accumTime;
		float texScale;
	}
	main {
		ConnectData OUT;
		OUT.hpos = mul(modelview, float4(IN.pos,1.0));
		OUT.hpos.z = OUT.hpos.w;
		float2 uv = IN.uv0;
		uv += texOffset;
		uv *= texScale;
		uv += accumTime * texDirection;
		OUT.texCoord = uv;
		return OUT;
	}
}
pixel {
	uniform {
		Texture2D diffuseMap : register(T0);
		SamplerState diffuseMap : register(S0);
	}
	target{
		SV_Target0;
	}
	output {
		float4 col;
	}
	main {
		float 4 col = diffuseMap.Sample(diffuseMap, IN.texCoord);
	}
}
